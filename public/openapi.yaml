openapi: 3.0.3
info:
    title: FEATI Computer Society API Docs
    description: API for managing publicly available data of the FEATI Computer Society student organization.
    contact:
        name: FEATI Computer Society
        url: 'https://featicompsociety.netlify.app'
        email: 'featicompsociety@gmail.com'
    license:
        'name': 'GNU General Public License 3.0'
        'url': 'https://github.com/featicompsociety/api?tab=GPL-3.0-1-ov-file'
    version: 1.0.0

servers:
    - url: https://featicompsociety.netlify.app/api
    # - url: http://localhost:8888/api

tags:
    - name: members
    - name: projects

paths:
    /members:
        get:
            tags:
                - members
            summary: Get all members
            description: Retrieve a list of members.
            operationId: getMembers
            security:
                - ApiKeyAuth: []
            responses:
                '200':
                    description: A list of members.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Member'
                '503':
                    description: Service unavailable.

        post:
            tags:
                - members
            summary: Add a new member
            description: Create a new member record.
            operationId: createMember
            security:
                - ApiKeyAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MemberInput'
            responses:
                '200':
                    description: Member added successfully.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MemberInput'
                '403':
                    description: Forbidden.

    /members/{id}:
        get:
            tags:
                - members
            summary: Get a member by ID
            description: Retrieve a single member by their unique ID.
            operationId: getMemberById
            security:
                - ApiKeyAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the member.
                  schema:
                      type: integer
            responses:
                '200':
                    description: Member data found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Member'
                '404':
                    description: Member data not found.

        patch:
            tags:
                - members
            summary: Update member data by ID
            description: Modify an existing member record.
            operationId: updateMember
            security:
                - ApiKeyAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the member.
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MemberInput'
            responses:
                '201':
                    description: Member data updated successfully.
                '403':
                    description: Forbidden.
                '404':
                    description: Member data not found.

        delete:
            tags:
                - members
            summary: Delete member data by ID
            description: Remove member data from the record.
            operationId: deleteMember
            security:
                - ApiKeyAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the member.
                  schema:
                      type: integer
            responses:
                '202':
                    description: Member data deleted successfully.
                '404':
                    description: Member data not found.

    /projects:
        get:
            tags:
                - projects
            summary: Get all projects
            description: Retrieve a list of projects.
            operationId: getProjects
            security:
                - ApiKeyAuth: []
            responses:
                '200':
                    description: A list of members.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Project'
                '503':
                    description: Service unavailable.
        post:
            tags:
                - projects
            summary: Add a new project
            description: Create a new project record.
            operationId: createProject
            security:
                - ApiKeyAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectInput'
            responses:
                '200':
                    description: Project added sucessfully.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ProjectInput'
                '403':
                    description: Forbidden.

    /projects/{id}:
        get:
            tags:
                - projects
            summary: Get a project by ID
            description: Retrieve a single project by their unique ID.
            operationId: getProjectById
            security:
                - ApiKeyAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the project.
                  schema:
                      type: integer
            responses:
                '200':
                    description: Project data found.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Project'
                '404':
                    description: Project data not found.

        patch:
            tags:
                - projects
            summary: Update project data by ID
            description: Modify an existing project record.
            operationId: updateProject
            security:
                - ApiKeyAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the project.
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectInput'
            responses:
                '201':
                    description: Project data updated successfully.
                '403':
                    description: Forbidden.
                '404':
                    description: Project data not found.

        delete:
            tags:
                - projects
            summary: Delete project data by ID
            description: Remove project data from the record.
            operationId: deleteProject
            security:
                - ApiKeyAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the project.
                  schema:
                      type: integer
            responses:
                '202':
                    description: Project data deleted successfully.
                '404':
                    description: Project data not found.

components:
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            in: header
            name: Api-Key

    schemas:
        Member:
            type: object
            properties:
                id:
                    type: string
                    example: '12345'
                firstName:
                    type: string
                    example: 'John'
                middleName:
                    type: string
                    example: 'Dennis'
                lastName:
                    type: string
                    example: 'Doe'
                age:
                    type: integer
                    example: 21
                role:
                    type: string
                    example: 'President'
                dateJoined:
                    type: string
                    format: date
                    example: '2023-09-01'
                birthDate:
                    type: string
                    format: date
                    example: '2002-06-15'

        MemberInput:
            type: object
            properties:
                firstName:
                    type: string
                    example: 'John'
                middleName:
                    type: string
                    example: 'Dennis'
                lastName:
                    type: string
                    example: 'Doe'
                role:
                    type: string
                    example: 'President'
                dateJoined:
                    type: string
                    format: date
                    example: '2023-09-01'
                birthDate:
                    type: string
                    format: date
                    example: '2002-06-15'

        Project:
            type: object
            properties:
                name:
                    type: string
                    example: 'Project Adam'
                startDate:
                    type: string
                    format: date
                    example: '2005-10-02'
                status:
                    type: string
                    example: 'In progress'
                priority:
                    type: string
                    example: 'High'

        ProjectInput:
            type: object
            properties:
                publicAPI:
                    type: boolean
                    example: false
                name:
                    type: string
                    example: 'Project Adam'
                startDate:
                    type: string
                    format: date
                    example: '2005-10-02'
                status:
                    type: string
                    example: 'In progress'
                priority:
                    type: string
                    example: 'High'
